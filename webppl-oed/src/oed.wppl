var make_list = function(length, value) {
    return repeat(length, function(){return value});
};

var normalize_list = function(list) {
    return map(function(x){return div(x, sum(list));}, list);
};

var OED = function(oed_params) {
    //to do: model input check
    var oed_models = oed_params.models;

    var oed_priors = (oed_params.models_prior == undefined) ? make_list(oed_models.length, 1/oed_models.length) :
                                                              normalize_list(oed_params.models_prior);

    var oed_nparts = (oed_params.num_participants == undefined) ? [1] :
                                                                 oed_params.num_participants;
    var oed_nparts_samples = (oed_params.num_participants_samples == undefined) ? 2000:
                                                                                  oed_params.num_participants_samples;

    //to do: experiment input check
    var oed_expts = oed_params.experiments;

    if (oed_nparts.length == 1)
    {
        var temp_data = map(function(expt){
                               var erp_list = map(function(models){models(expt)}, oed_models);
                               return webpplOed.make_datum(expt, webpplOed.get_expected_kl(erp_list, oed_priors), oed_nparts[0], erp_list)},
                            oed_expts);
        var data = webpplOed.make_data(temp_data);
        return data;
    }
    else
    {
        var temp_data = mapReduce1(append, function(expt) {
                                var erp_list = map(function(models){models(expt)}, oed_models);
                                    map(function(npart){
                                        return webpplOed.make_datum(expt, webpplOed.get_expected_kl_participants_sample(erp_list, oed_priors, npart, oed_nparts_samples), npart, erp_list)},
                                    oed_nparts)}, oed_expts);
        var data = webpplOed.make_data(temp_data);
        return data;
    }
};

